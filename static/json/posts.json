{"scaleup-award-winner-stories":{"Featured":"2","Author":"Mitoc Group","AboutAuthor":"technology company focusing on automation using cloud native services with proven track record helping clients migrate to the cloud, establish devops & dataops","Avatar":"mitoc-group.ico","TwitterUsername":"MitocGroup","PublicationDate":"Sun, 12 June 2016 12:20:55 -0400","Thumbnail":"/images/blog/2016-06-12/scaleup-award-winner-stories.png","Title":"StackWorld ScaleUp Award Winner Stories","Intro":"","htmlCode":"<div class=\"\">\n    <img src=\"/images/blog/2016-06-12/scaleup-award-winner-stories.png\" alt=\"winner story\" />\n    <div class=\"center img-description\">\n        <a href=\"http://www.stackworld.com/awards/scaleup-winner-stories\" rel=\"noreferrer\">http://www.stackworld.com/awards/scaleup-winner-stories</a>)\n    </div>\n</div>\n<p class=\"graf graf-up\"><a href=\"http://www.stackworld.com/\">StackWorld</a> is San Francisco’s Largest DevOps + Scalability Technology Conference where 1,200+ tech companies scale their technology stack from Clouds to DevOps Tools to Back-End Coding Languages. The goal of StackWorld is to connect the community and educate practitioners on scaling their applications and technology stacks. “DevOps” has emerged as an intersection between Developers and IT — where specialized DevOps professionals and DevOps technologies allow applications to scale and get delivered at faster speeds.</p>\n<p class=\"graf graf-up\">Mitoc Group is humble and proud to be nominated among companies like New Relic or Sumo Logic, and voted for <a href=\"http://www.stackworld.com/awards/scaleup-winner-stories\">Top 25 ScaleUp Award</a>. On behalf of our customers and our partners, as well as the entire team who works on <a href=\"https://github.com/MitocGroup/deep-framework\">DEEP Framework</a>, <a href=\"https://www.npmjs.com/packages/deepify\">DEEP CLI</a> and <a href=\"https://www.deep.mg/\">DEEP Marketplace</a>, we would like to thank everybody who believes in our capabilities and recognize our achievements.</p>\n<p class=\"graf graf-up\">Looking forward to StackWorld 2016 and please join our session <strong>“Building Scalable Web Applications using Microservices Architecture and Serverless Computing from AWS”</strong> on Tuesday, June 28th at 10am.</p>"},"blue-green-deployments-for-serverless-powered-applications-on-aws":{"Featured":"1","Author":"Mitoc Group","AboutAuthor":"technology company focusing on automation using cloud native services with proven track record helping clients migrate to the cloud, establish devops & dataops","Avatar":"mitoc-group.ico","TwitterUsername":"MitocGroup","PublicationDate":"Thu, 20 October 2016 12:20:55 -0400","Thumbnail":"/images/blog/2016-10-20/lambda-edge.png","Title":"Blue-Green Deployments for Serverless Powered Applications on AWS","Intro":"First described by Martin Fowler back in 2010, blue-green deployment is \na release technique that reduces downtime and risk by running two identical \nproduction environments called Blue and Green.","htmlCode":"<div class=\"floatleft\">\n    <img src=\"/images/blog/2016-10-20/lambda-edge.png\" alt=\"lambda edge\" />\n    <div class=\"center img-description\">Source:\n        <a href=\"https://devopscube.com/wp-content/uploads/2016/12/lamda@edge.png\" rel=\"noreferrer\">https://devopscube.com/wp-content/uploads/2016/12/lamda@edge.png</a>\n    </div>\n</div>\n<p class=\"graf graf-up\">Fast-forwarding to 2013, <a href=\"https://github.com/dtsato\">Danilo Sato</a> from ThoughtWorks published on their blog a very insightful article that describes <a href=\"https://www.thoughtworks.com/insights/blog/implementing-blue-green-deployments-aws\">how to implement blue-green deployments using AWS.</a> We, at Mitoc Group, are working primarily with serverless computing from AWS, and today we’d like to share our experience using blue-green deployment process for serverless powered applications.</p>\n<p class=\"graf graf-up\"><em><code>Note: This blogpost uses intentionally screenshots from AWS Management Console to outline a Do-It-Yourself point of view, but we’ll also provide (wherever possible) the equivalent devops command or tool, to make sure that more advanced audience is NOT bored to death :)</code></em></p>\n<p class=\"graf graf-up\">The key points to keep in mind as we move forward:</p>\n<ol class=\"graf graf-ol-li graf-grap\">\n<li>We use <strong>full stack</strong> approach to build web applications using serverless computing from AWS (not just AWS Lambda and API Gateway)</li>\n<li>We enforce <strong>security in every layer</strong> and <strong>least privilege access</strong> (e.g. front-end tier, back-end tier, data tier, as well as centralized monitoring)</li>\n<li>We apply the same approach to newly built applications, as well as newly cloud-migrated applications that are compatible with <strong>microservices architecture</strong> (we call them <strong>cloud-native applications</strong>)</li>\n</ol>\n<h3>Serverless Architecture on AWS</h3>\n<p class=\"graf graf-up\">Before we dive into the details of the blue-green deployment process for serverless powered applications, it’s vital to point out the architecture of a typical web application that uses serverless computing from AWS (as shown in the picture below, as well as described in <a href=\"https://blog.mitocgroup.com/building-enterprise-level-web-applications-on-aws-lambda-with-the-deep-framework-dd81719b0dff\">this blogpost</a>).</p>\n<div class=\"floatleft\">\n    <img src=\"https://miro.medium.com/max/3968/1*obn8oKjcqkJJUIZ2bB59xg.png\" alt=\"lambda-deep-framework\" />\n    <div class=\"center img-description\">\n        <a href=\"https://blog.mitocgroup.com/building-enterprise-level-web-applications-on-aws-lambda-with-the-deep-framework-dd81719b0dff\" rel=\"noreferrer\">https://blog.mitocgroup.com/building-enterprise-level-web-applications-on-aws-lambda-with-the-deep-framework-dd81719b0dff</a>\n    </div>\n</div>\n<p class=\"graf graf-up\">Here below is the summarized list of AWS products we use:</p>\n<ul class=\"graf graf--li graf-grap\">\n<li>Security tier: 1) <a href=\"https://aws.amazon.com/iam/\">AWS IAM</a> and 2) <a href=\"https://aws.amazon.com/cognito/\">Amazon Cognito</a></li>\n<li>Front-end tier: 3) <a href=\"https://aws.amazon.com/route53/\">Amazon Route53</a>, 4) <a href=\"https://aws.amazon.com/cloudfront/\">Amazon CloudFront</a> and 5) <a href=\"https://aws.amazon.com/s3/\">Amazon S3</a></li>\n<li>Back-end tier: 6) <a href=\"https://aws.amazon.com/api-gateway/\">Amazon API Gateway</a>, 7) <a href=\"https://aws.amazon.com/lambda/\">AWS Lambda</a> and 8) <a href=\"https://aws.amazon.com/sns/\">Amazon SNS</a></li>\n<li>Data tier: 9) <a href=\"https://aws.amazon.com/dynamodb/\">Amazon DynamoDB</a>, 10) <a href=\"https://aws.amazon.com/sqs/\">Amazon SQS</a>, 11) <a href=\"https://aws.amazon.com/elasticache/\">Amazon ElastiCache</a> and 12) <a href=\"https://aws.amazon.com/elasticsearch-service/\">Amazon Elasticsearch Service</a></li>\n<li>Monitoring tier: 13) <a href=\"https://aws.amazon.com/cloudwatch/\">Amazon CloudWatch</a>, 14) <a href=\"https://aws.amazon.com/cloudtrail/\">AWS CloudTrail</a> and 12) <a href=\"https://aws.amazon.com/elasticsearch-service/\">Amazon Elasticsearch Service</a></li>\n</ul>\n<p class=\"graf graf-up\"><em><code>Note: As you can see above, a typical web application in our case uses 14 different services from AWS. Also, Amazon CloudSearch is a much better fit as a serverless option for full-text search capabilities, but we prefer Elasticsearch technology and Amazon Elasticsearch Service instead</code></em></p>\n<h3>Pre-requisites and Initial Considerations</h3>\n<p class=\"graf graf-up\">The blue-green deployment for serverless powered applications is happening entirely on the front-end tier, mainly because all other resources from back-end, data, monitoring and security tiers are duplicated and therefore are NOT altered during this process. So, going forward, we’ll be describing only the changes that will be applied to Amazon Route53, Amazon CloudFront and Amazon S3 during any serverless blue-green deployment.</p>\n<p class=\"graf graf-up\">The simplest and most straight-forward approach to blue-green deployments for serverless powered applications is to switch all traffic from blue environment to green environment on DNS level (and in case of failures, rollback from green environment to blue environment).</p>\n<p class=\"graf graf-up\">Managing DNS records can be sometimes very tricky, mainly because the propagation might take unpredictable time due to various caching layers on Internet. But our experience with Amazon Route53 is amazing, as long as we are using A alias records instead of CNAME records. Here below are 3 screenshots from AWS Management Console that shows how we’ve setup <em>www1.adtechmedia.io</em> in Amazon Route53, Amazon CloudFront and Amazon S3:</p>\n<div class=\"maxHeight500px center\">\n    <img src=\"/images/blog/2016-10-20/edit-record-set.png\" alt=\"edit-record-set\" />\n    <div class=\"center img-description\">\n        aws route53 list-resource-record-sets --hosted-zone-id [YOUR_HOSTED_ZONE_ID]\n    </div>\n</div>\n<div class=\"\">\n    <img src=\"/images/blog/2016-10-20/get-distribution.png\" alt=\"get-distribution\" />\n    <div class=\"center img-description\">\n        aws cloudfront get-distribution --id [YOUR_DISTRIBUTION_ID]\n    </div>\n</div>\n<div class=\"\">\n    <img src=\"/images/blog/2016-10-20/static-webhosting.png\" alt=\"static-webhosting\" />\n    <div class=\"center img-description\">\n        aws s3 website s3://www1.adtechmedia.io/ --index-document index.html --error-document error.html\n    </div>\n</div>\n<h3>Blue/Green Deployments v1</h3>\n<p class=\"graf graf-up\">At this point, we are ready to switch from blue environment to green environment with zero downtime and low risks. The switch is quite simple:</p>\n<p class=\"graf graf-up\"><strong>Step 1:</strong> Update CloudFront distribution for blue environment by removing <em>www1.adtechmedia.io</em> from Alternative Domain Names (CNAMEs)</p>\n<div class=\"\">\n    <img src=\"/images/blog/2016-10-20/step1.png\" alt=\"step1\" />\n    <div class=\"center img-description\">\n        aws cloudfront update-distribution --distribution-config file://distconfig-disabled.json --id [YOUR_DISTRIBUTION_ID]\n    </div>\n</div>\n<p class=\"graf graf-up\"><strong>Step 2:</strong> Update CloudFront distribution for green environment by adding <em>www1.adtechmedia.io</em> to Alternative Domain Names (CNAMEs)</p>\n<div class=\"\">\n    <img src=\"/images/blog/2016-10-20/step2.png\" alt=\"step2\" />\n    <div class=\"center img-description\">\n        aws cloudfront update-distribution --distribution-config file://distconfig-disabled.json --id [YOUR_DISTRIBUTION_ID]\n    </div>\n</div>\n<p class=\"graf graf-up\"><strong>Step 3:</strong> Update Route53 A alias record with CloudFront distribution Domain Name from green environment</p>\n<div class=\"maxHeight500px center\">\n    <img src=\"/images/blog/2016-10-20/step3.png\" alt=\"step3\" />\n    <div class=\"center img-description\">\n        aws route53 change-resource-record-sets --change-batch file://resource-record.json --hosted-zone-id [YOUR_HOSTED_ZONE_ID]\n    </div>\n</div>\n<p class=\"graf graf-up\">If, for some unexpected reason, your green environment starts generating high level of failures, the rollback process is pretty similar to the one described above:</p>\n<ol class=\"graf graf-ol-li graf-grap\">\n<li>Remove CNAME from green environment</li>\n<li>Add CNAME to blue environment</li>\n<li>Update Amazon Route53 with blue environment Domain Name</li>\n</ol>\n<p class=\"graf graf-up\"><em><code>UPDATE on 11/03/2016: A friend pointed out that it’s not necessarily to add/remove CNAMEs (which could take up to 20 minutes to propagate). Instead, just leave blue environment as it is (e.g. www1.adtechmedia.io) and setup wild carded CNAME on green environment (e.g. *.adtechmedia.io). When both distributions are enabled, blue will take precedence over green, making sure you’re not stuck with new deploy in case of high level of failures.</code></em></p>\n<h3>Blue/Green Deployments v2</h3>\n<p class=\"graf graf-up\">As you have seen in the previous blue-green deployments process the traffic between environments is switched suddenly, at 100% capacity. This is great for zero downtime, but if your application starts to fail, all of your users are affected. Some modern continuous deployment technics promote a more gradual switch of the traffic between environments. For example, we push only 5% of requests to green environment, while 95% still goes to blue environment. This allows to detect production problems early and on a much smaller audience of users, problems that have never surfaced in testing and staging phases. Is it possible to enable such an approach for serverless powered applications?</p>\n<p class=\"graf graf-up\">Short answer, yes! We’re very excited and humble to be able to explain our serverless solution, but there are some additional pre-requisites that must happen before. Let’s describe the challenge first, and then jump into our implementation and pre-requisites.</p>\n<h4>The Challenge</h4>\n<p class=\"graf graf-up\">Amazon CloudFront, the way it is designed, doesn’t allow same CNAME on multiple distributions. That is also the reason why we’re removing it from the blue environment and adding it to the green environment in our previous implementation.</p>\n<h4>Our implementation</h4>\n<p class=\"graf graf-up\">Amazon Route53 allows weighted routing of the traffic across multiple Amazon CloudFront distributions, Amazon S3 static websites and other endpoints. So, instead of load balancing requests between distributions, we are changing current A alias record that points to blue environment from simple routing to weighted routing, and add another A alias record as green environment that points directly to Amazon S3 static website endpoint. This enables us to manipulate requests across environments as we wish: 95% vs 5% (as shown in the screenshot below), then (if everything is fine) 90% vs 10%, and so on until blue is 0% and green is 100%.</p>\n<div class=\"maxHeight500px center\">\n    <img src=\"/images/blog/2016-10-20/hosted-zone-id.png\" alt=\"hosted-zone-id\" />\n    <div class=\"center img-description\">\n        aws route53 change-resource-record-sets --change-batch file://resource-record.json --hosted-zone-id [YOUR_HOSTED_ZONE_ID]\n    </div>\n</div>\n<p class=\"graf graf-up\">All changes are made on Amazon Route53 level, without altering Amazon CloudFront or Amazon S3 resources. And compared to previous blue-green deployment, rollback process is even faster and easier. We remove A alias record of green environment and we’re done! Well, almost done… For consistency and cost saving purposes, we also revert back A alias record of blue environment from weighted routing to simple routing.</p>\n<h3>Final Thoughts and Conclusion</h3>\n<p class=\"graf graf-up\">What are the down sizes (pre-requisites) of the blue-green deployments v2?</p>\n<ol class=\"graf graf-ol-li graf-grap\">\n<li>Amazon S3 static website hosting doesn’t support SSL, so we find ourselves temporarily enforcing HTTP-only during blue-green deployment</li>\n<li>Amazon S3 static endpoint can be used with Amazon Route53 A alias only if the bucket name is the same with the domain name (e.g. <a href=\"http://www.adtechmedia.io\">www.adtechmedia.io</a>)</li>\n<li>Depends on the traffic size, specifically how much TPS you’re consuming, Amazon S3 might start throttling you (more details here: <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/request-rate-perf-considerations.html\">Request Rate and Performance Considerations</a>)</li>\n</ol>\n<p class=\"graf graf-up\">Unfortunately, there is no silver bullet that would work perfectly for any serverless powered applications on AWS. As with any software, it’s up to us (developers or devops engineers) to decide the right process that fits specific use case. We just wanted to share two different approaches that empowered us to provide high quality at scale without compromising on resources and costs (which, by the way, are ridiculously low, but that’s another blogpost).</p>\n<div class=\"center img-description\">\n        <a href=\"https://blog.mitocgroup.com/mitoc-group-featured-as-frameworks-partner-by-aws-lambda-team-a7d3d5632cf8\">\n        https://blog.mitocgroup.com/mitoc-group-featured-as-frameworks-partner-by-aws-lambda-team-a7d3d5632cf8</a>\n</div>\n<p class=\"graf graf-up\">Last, but not the least, <a href=\"https://www.mitocgroup.com/\">Mitoc Group</a> is a technology company that focuses on innovative enterprise solutions. Share your thoughts and your experience on <a href=\"https://linkedin.com/company/mitoc-group\">LinkedIn</a>, <a href=\"https://twitter.com/mitocgroup\">Twitter</a> or <a href=\"https://facebook.com/mitocgroup\">Facebook</a>.</p>"},"mitoc-group-inc-achieves-aws-service-delivery-partner-status-for-aws-lambda":{"Featured":"3","Author":"Mitoc Group","AboutAuthor":"technology company focusing on automation using cloud native services with proven track record helping clients migrate to the cloud, establish devops & dataops","Avatar":"mitoc-group.ico","TwitterUsername":"MitocGroup","PublicationDate":"Tue, 29 Novembre 2016 12:20:55 -0400","Thumbnail":"/images/blog/2016-11-29/partner-network.png","Title":"Mitoc Group Inc. Achieves AWS Service Delivery Partner Status for AWS Lambda","Intro":"","htmlCode":"<div class=\"\">\n    <img src=\"/images/blog/2016-11-29/partner-network.png\" alt=\"partner aws\" />\n    <div class=\"center img-description\">\n       Mitoc Group Inc. achieves AWS Service Delivery Partner status for AWS Lambda\n    </div>\n</div>\n<p class=\"graf graf-up\">Woodcliff Lake, NJ — Nov. 29, 2016 – <a href=\"https://www.mitocgroup.com/\">Mitoc Group Inc.</a>, a technology company that focuses on innovative enterprise solutions, announced today that it has achieved AWS Service Delivery Partner status for AWS Lambda. The AWS Service Delivery Program is designed to highlight AWS Partner Network (APN) Partners who have a track record of delivering verified customer success for specific Amazon Web Services (AWS) products.</p>\n<p class=\"graf graf-up\">The AWS Service Delivery Program was recently launched to help AWS customers find qualified APN Partners that provide expertise in a specific service or skill area. To qualify, partners must pass service-specific verification of customer references and a technical review, meaning customers can be confident they are working with partners that provide recent and relevant experience.</p>\n<p class=\"graf graf-up\">“Mitoc Group is proud to be one of the first APN partners to participate in the AWS Service Delivery Program,” said <a href=\"https://linkedin.com/in/eistrati\">Eugene Istrati</a>, Technology Partner at Mitoc Group. “Our team has built a base of applied experience around AWS Lambda, and we are dedicated to helping customers achieve their business goals by leveraging the agility of the AWS Cloud.”</p>\n<p class=\"graf graf-up\">APN Partners with AWS Service Delivery Partner Status for AWS Lambda provide services and tools that help customers build or migrate their solutions to a micro-services based serverless architecture, without the need to worry about provisioning or managing servers.</p>\n<p class=\"graf graf-up\">Mitoc Group is helping customers like <a href=\"https://www.manning.com/\">Manning Publications</a> build a new product intended to give users better access to for-pay content. “ We haven’t had the best experiences when developing new products in the past,” said Marjan Bace, Publisher at Manning. “With AWS Lambda, there’s a noticeable difference in the speed of development. We’re able to follow an agile process that includes quick feature redesign, which leads to a much better experience.”</p>\n<p class=\"graf graf-up\">About Mitoc Group</p>\n<p class=\"graf graf-up\">Mitoc Group is a technology company that focuses on innovative enterprise solutions. Our mission is to enable businesses and developers to provide high-value products and services in a constantly changing digital world. To learn more, contact hello@mitocgroup.com or visit <a href=\"https://www.mitocgroup.com/\">www.mitocgroup.com</a>.</p>\n<p class=\"graf graf-up\">Media Contact: press@mitocgroup.com.</p>"},"mitoc-group-inc-granted-aws-advanced-technology-partner-status":{"Featured":"4","Author":"Mitoc Group","AboutAuthor":"technology company focusing on automation using cloud native services with proven track record helping clients migrate to the cloud, establish devops & dataops","Avatar":"mitoc-group.ico","TwitterUsername":"MitocGroup","PublicationDate":"Fri, 21 July 2017 12:20:55 -0400","Thumbnail":"/images/blog/2016-11-29/partner-network.png","Title":"Mitoc Group Inc. Granted AWS Advanced Technology Partner Status","Intro":"Congratulations! Your Firm Has Been Accepted into the Advanced AWS Partner Network (APN) Tier.","htmlCode":"<div class=\"\">\n    <img src=\"/images/blog/2016-11-29/partner-network.png\" alt=\"partner aws\" />\n    <div class=\"center img-description\">\n       Mitoc Group Inc. achieves AWS Service Delivery Partner status for AWS Lambda\n    </div>\n</div>\n<p class=\"graf graf-up\">Woodcliff Lake, NJ — July 21, 2017 — Mitoc Group Inc., a technology company that focuses on innovative enterprise solutions, announced today that it has been granted <a href=\"https://aws.amazon.com/partners/technology\">AWS Advanced Technology Partner</a> status by Amazon Web Services, recognizing its ability to help businesses and developers drive innovation using DevOps and Serverless on the AWS Cloud.</p>\n<p class=\"graf graf-up\">Mitoc Group is also part of the <a href=\"https://aws.amazon.com/partners/saas/\">AWS SaaS Partner Program</a> which provides APN Technology Partners with support as they build, launch, and grow SaaS solutions on AWS. The company and its staff is very proud to join the ranks of Chef and Puppet, US based companies that pioneered DevOps landscape.</p>\n<p class=\"graf graf-up\">“We are thrilled to be named an Advanced Technology Partner in the AWS Partner Network,” said <a href=\"https://linkedin.com/in/eistrati\">Eugene Istrati</a>, Technology Partner at Mitoc Group. “Our team has built a base of innovative products and simplified processes around AWS Lambda, and we are dedicated to helping customers achieve their business goals by leveraging the agility of DevOps and Serverless on the AWS Cloud.”</p>\n<p class=\"graf graf-up\">Mitoc Group is helping customers like <a href=\"https://www.manning.com/\">Manning Publications</a> build a new product intended to give users better access to for-pay content. “ We haven’t had the best experiences when developing new products in the past,” said Marjan Bace, Publisher at Manning. “With AWS Lambda, there’s a noticeable difference in the speed of development. We’re able to follow an agile process that includes quick feature redesign, which leads to a much better experience.”</p>\n<h4>About Mitoc Group</h4>\n<p class=\"graf graf-up\">Mitoc Group is a technology company that focuses on innovative enterprise solutions. Our mission is to enable businesses and developers to provide high-value products and services in a constantly changing digital world. To learn more, contact hello@mitocgroup.com or visit <a href=\"https://www.mitocgroup.com/\">www.mitocgroup.com</a>.</p>\n<p class=\"graf graf-up\">Media Contact: press@mitocgroup.com.</p>"},"aws-re-invent-2017-serverless-chalk-talk":{"Featured":"0","Author":"Mitoc Group","AboutAuthor":"technology company focusing on automation using cloud native services with proven track record helping clients migrate to the cloud, establish devops & dataops","Avatar":"mitoc-group.ico","TwitterUsername":"MitocGroup","PublicationDate":"Fri, 24 November 2017 12:20:55 -0400","Thumbnail":"/images/blog/2016-11-29/partner-network.png","Title":"Mitoc Group Inc. Granted AWS Advanced Technology Partner Status","Intro":"Congratulations! Your Firm Has Been Accepted into the Advanced AWS Partner Network (APN) Tier.","htmlCode":"<div class=\"\">\n    <img src=\"/images/blog/2016-11-29/partner-network.png\" alt=\"partner aws\" />\n    <div class=\"center img-description\">\n       <a href=\"https://www.portal.reinvent.awsevents.com/connect/search.ww#loadSearch-searchPhrase=SRV326&searchType=session\" target=\"_blank\">https://www.portal.reinvent.awsevents.com/connect/search.ww#loadSearch-searchPhrase=SRV326&searchType=session</a>\n    </div>\n</div>\n<p class=\"graf graf-up\">If you are like me, you probably regret the amount of food and drinks from yesterday’s Thanksgiving dinner. At least I had lots of fun and an amazing time with family and friends. And, to feel better, this morning I woke up early and played two hours of soccer.</p>\n<p class=\"graf graf-up\">Wait. What am I talking about?</p>\n<p class=\"graf graf-up\">Oh, right. AWS re:Invent 2017. After <a href=\"https://blog.mitocgroup.com/best-re-invent-ever-448ac73f6a4e\">AWS re:Invent 2015</a>, it is time for me to get back to writing (apologies for being quiet for most of the year or so) and share great news for our customers, our partners and our team:</p>\n<div class=\"\">\n    <img src=\"/images/blog/2016-11-29/email.png\" alt=\"aws email\" />\n    <div class=\"center img-description\">\n       Nomination email from AWS re:Invent team\n    </div>\n</div>\n<p class=\"graf graf-up\">We have been busy. Business as usual. Little to no time to write about our experience and achievements. Nevertheless, back in July 2017, we have received above email that nominates Mitoc Group to present at Amazon Web Services’ biggest event of the year. It was very humbling and very exciting to be considered for a talk on serverless topic, our core business and focus, and it comes with huge responsibility. We have been working with AWS Serverless products since 2014, and <a href=\"https://blog.mitocgroup.com/deep-management-s-continuous-integration-with-travis-ci-and-coveralls-1cfcfcb3c284\">Continuous Integration</a> is part of our culture. That’s why our proposal, <a href=\"https://www.portal.reinvent.awsevents.com/connect/sessionDetail.ww?SESSION_ID=18059\">How to Approach Continuous Integration for Serverless Applications</a>, was a no-brainer and a natural choice:</p>\n<div class=\"external-article\">\n  <a href=\"https://www.portal.reinvent.awsevents.com/connect/sessionDetail.ww?SESSION_ID=18059&source=post_page-----92bd01ef8151----------------------\">\n  <h5>How to Approach Continuous Integration for Servless Applications</h5>\n  <span>Continuous integration is the practice of merging all working copies of developer code into one shared mainline several...</span>\n    <span>www.portal.reinvent.awsevents.com</span>\n  </a>\n</div>\n<p class=\"graf graf-up\">Last week, we get another email from AWS re:Invent team, saying that “your chalk talk SRV326 How to Approach Continuous Integration for Serverless Applications is 1,072.73% over-subscribed! Would you like to hold a repeat session?” And … there you go:</p>\n<div class=\"external-article\">\n  <a href=\"https://www.portal.reinvent.awsevents.com/connect/sessionDetail.ww?SESSION_ID=18059&source=post_page-----92bd01ef8151----------------------\">\n  <h5>[REPEAT] How to Approach Continuous Integration for Servless Applications</h5>\n  <span>Continuous integration is the practice of merging all working copies of developer code into one shared mainline several...</span>\n    <span>www.portal.reinvent.awsevents.com</span>\n  </a>\n</div>\n<p class=\"graf graf-up\">What I’m trying to convey is that doing the right thing on behalf of the customers and partners won’t necessary get you on Forbes’ or Fortune’s cover, but will definitely get you noticed by your industry peers and promote you in sharing your experience with others. See you next week in Vegas and looking forward to <a href=\"https://reinvent.awsevents.com/\">AWS re:Invent 2017</a>.</p>"}}
